/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   PmergeMe.cpp                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: djacobs <djacobs@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/03/17 19:04:22 by djacobs           #+#    #+#             */
/*   Updated: 2024/04/29 22:14:07 by djacobs          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "PmergeMe.hpp"
#include <iostream>
#include <exception>
#include <cstdlib>
#include <utility>
#include <deque>
#include <vector>
#include <sys/time.h>

Error::Error(): _msg(std::string("Error: ")){}

Error::Error(const Error& cpy): _msg(cpy._msg){}

Error::~Error() throw(){}

Error::Error(const char* msg): _msg(std::string("Error: ") + msg){}

Error& Error::operator=(const Error& as){_msg = as._msg; return *this;}

const char* Error::what() const throw(){return _msg.c_str();}

PM::PM(){}

PM::~PM(){}

PM::PM(PM& cpy){static_cast<void>(cpy);}

PM& PM::operator=(PM& P){static_cast<void>(P); return P;}

double getElapsedTime(timeval start, timeval end){
	long seconds = end.tv_sec - start.tv_sec;
	long microseconds = end.tv_usec - start.tv_usec;
	return seconds + microseconds*1e-6;
}

//convert an iterator to it's position in the container
template <typename T>
static size_t to_int(T type, typename T::iterator it) {
		size_t i = 0;

	for (typename T::iterator ty = type.begin(); *ty != *it; ty++)
		i++;
	return i;
}

//assign a ranged container to another container
template <typename T, typename T_iterator>
static void assignement(T_iterator start, T_iterator end, T& dst){
	T src = T(start, end);
	dst.clear();

	for (typename T::iterator it = src.begin(); it != src.end(); it++)
		dst.push_back(*it);
}

template <typename T>
static void T_swap(T& first, T& second){
	T swap = first;
	first = second;
	second = swap;
}

//works like the emplace container member function in c++11 
template <typename container, typename value>
static void emplace(container& ty, unsigned int ty_i, value val){
	container tmp;

	for (typename container::iterator it = ty.begin(); it != ty.end(); it++){
		if (to_int(ty, it) == ty_i){
			tmp.push_back(val);
			for (typename container::iterator tmp_it = it; tmp_it != ty.end(); tmp_it++) {
				tmp.push_back(*tmp_it);
				if (it != ty.end() - 1) it++;
				}
		}
		else tmp.push_back(*it);
	}
	ty.clear();
	assignement(tmp.begin(), tmp.end(), ty);
}

//recursively sort pairs, first sort elements in the pairs then sort the pairs themselves 
void PM::sort_pairs(pair_vector& pairs, pair_vector::iterator curr) const{
	if (curr != pairs.end()){
		sort_pairs(pairs, curr + 1);
		if ((*curr).second < (*curr).first) T_swap((*curr).first, (*curr).second);
		for (pair_vector::iterator it = curr; it != pairs.end(); it++)
			if (it + 1 != pairs.end() && (*it).second > (*(it + 1)).second) T_swap(*it, *(it + 1));
	}
	return ;
}

template <typename T>
void PM::binary_search_sort(T& list, pair_vector& pairs, typename T::iterator last) {
	T pend;
	T main_chain;

	for (pair_vector::iterator it = pairs.begin(); it != pairs.end(); it++){
		pend.push_back((*it).first);
		main_chain.push_back((*it).second);
	}

	if (last != list.end()) pend.push_back(*last);

	T range;
	for (typename T::iterator mid; pend.size(); pend.erase(pend.begin())){
		range = main_chain;
		mid = range.begin() + static_cast<unsigned int>(range.size() / 2);
		while(range.size() > 2){
			typename T::iterator limit = mid + 1;
			*mid <= *pend.begin() ? limit = range.end() : mid = range.begin();
			assignement(mid, limit, range);
			mid = range.begin() + static_cast<unsigned int>(range.size() / 2);
		}
		*range.begin() > *pend.begin() ? mid = range.begin() : mid = range.end() - 1;
		emplace(main_chain, to_int(main_chain, mid), *pend.begin());
	}
	assignement(main_chain.begin(), main_chain.end(), list);
}

template <typename T>
T PM::sort(T& list){
	pair_vector pairs;
	
	typename T::iterator last = list.end();
	if (list.size() % 2) last--;

	//turn the container into pairs
	for (typename T::iterator it = list.begin(); it != list.end();){
		if ((it) != last) {pairs.push_back(std::make_pair(*it, *(it + 1))); it += 2;}
		else it++;
	}

	sort_pairs(pairs, pairs.begin());
	binary_search_sort(list, pairs, last);
	return list;
}

bool PM::is_num(char* av) const{
	for (unsigned int i = 0; av[i]; i++)
		if (!((av[i] == 46 || av[i] == 45) || (av[i] >= 48 && av[i] <= 57))) return false;
	return true;
}

void PM::start(char**av){
	if (gettimeofday(&start_time, NULL) == -1) throw Error("gettimeofday() fail.");

	//Parsing
	for (size_t i = 0; av[i + 1] != NULL;){ i++;
		if (!is_num(av[i])) throw Error("bad symbols.");
		if (av[i] == NULL && i <= 2) throw Error("not enough values.");
		double d = atof(av[i]);
		if (d != static_cast<unsigned int>(d)) throw Error("value is not a whole positive number");
		else if (d < 0) throw Error("value is non-positive");
		_vector.push_back(atoi(av[i]));
		_deque.push_back(atoi(av[i]));
	}

	unsorted = _vector;
	sort(_vector);
	if (gettimeofday(&end_time, NULL) == -1) throw Error("gettimeofday() fail.");
	_vector_time = getElapsedTime(start_time, end_time);
	sort(_deque);
	if (gettimeofday(&end_time, NULL) == -1) throw Error("gettimeofday() fail.");
	_deque_time = getElapsedTime(start_time, end_time);

	//Print
	std::cout << "Before:\t";
	for (uint_vector::iterator i = unsorted.begin(); i != unsorted.end(); i++)
		std::cout << *i << ' ';
	std::cout << std::endl << "After:\t";
	for (uint_vector::iterator i = _vector.begin(); i != _vector.end(); i++)
		std::cout << *i << ' ';
	std::cout << std::endl;

	//Print time
	std::cout << "Time to process a range of " << _vector.size() << " elements with std::vector" <<
	": " << _vector_time << " seconds" << std::endl;

	std::cout << "Time to process a range of " << _vector.size() << " elements with std::deque" <<
	": " << _deque_time << " seconds" << std::endl;	
}

// 2 5 1 2 6 3 7 4 9 8
// 2 5 1 6 3 7 4 9 8

//786 2196 561 1666 2456 1090 2196 1663 2376 1949 2213 1832 2305 2732 2627 1333 1060 536 1491 2506 2055 2279 777 1806 2543 2516 631 1501 484 1665 2530 2800 2046 977 2377 1716 1748 1920 298 1193 1631 959 2993 2086 2439 735 2702 1521 120 1055 1167 1841 286 1458 2886 1124 720 244 634 2726 1738 2864 1313 1206 754 2650 1894 256 1725 1944 300 943 2105 2787 907 1395 1493 2042 1862 2049 922 1635 1871 2374 1859 248 1349 1673 2624 285 1871 2162 2523 2666 1945 892 697 2814 311 2797 1268 1376 2536 1833 892 2201 1451 1115 1138 1454 491 2168 1216 1184 1431 2507 975 2688 435 1844 1132 2600 2979 545 666 1290 2105 2572 754 1227 2090 1117 2429 1111 2378 630 297 2578 449 2669 2798 1752 892 392 1510 1838 2268 496 1077 2932 2040 332 1469 1330 607 1268 1548 144 2427 363 617 725 1169 713 604 1236 2377 2442 1107 1392 2275 1744 2172 1029 2923 1574 2253 1882 1329 2995 2799 1238 1839 2587 1032 2336 1085 970 2769 2061 1918 2935 425 626 692 1481 713 624 1192 2519 1449 1320 2775 2492 2010 635 2978 1488 1443 2306 846 2734 1083 382 569 1179 2364 2204 1249 608 1998 2355 2456 1690 407 978 1854 1551 237 1403 467 2288 187 556 389 1309 910 1656 2314 838 1732 2383 2646 1533 2223 990 1988 1981 611 1278 1400 2838 2880 1146 1678 762 2362 1341 2957 610 1843 2491 2197 2533 1335 1373 2123 2188 772 2820 1557 2530 2841 2680 332 435 2477 1837 1637 1411 318 335 2445 365 2467 2946 2322 185 402 1197 1501 2771 2510 1470 2500 202 1442 806 2112 2368 564 2041 2639 2364 1643 1246 2233 2971 398 546 1590 1242 438 1275 1628 1869 618 2206 2937 1473 1386 2619 2787 586 2943 574 2445 1734 1628 2415 2989 2903 179 2690 442 2644 1522 2662 424 1288 477 481 1970 426 379 307 812 1321 1116 1524 1339 1035 1615 1565 2485 2638 2906 1431 2851 610 916 1061 894 1056 2618 2310 2880 1267 1429 1570 1128 1301 2004 1777 2807 1094 840 687 2745 2314 2055 1315 2099 1599 1994 933 919 1131 226 2848 1415 1128 2194 2523 850 2674 365 2295 1846 2940 1743 1712 545 1007 1998 1938 824 1449 825 2770 2156 251 2754 887 2832 465 1717 1938 677 2241 634 598 425 2319 2292 1053 1443 2582 1663 235 2113 2828 637 1458 2548 769 1102 2369 1899 252 2252 254 373 368 857 1849 2424 1510 2244 2800 315 1777 160 2643 275 2727 1781 2536 1187 2655 1127 734 1503 1866 2458 1516 2406 259 1935 2233 2679 690 2864 2954 386 2742 1329 1303 1280 2808 2707 699 237 2747 2992 591 1059 301 1819 1463 2064 871 1360 1451 2147 2836 2732 1962 967 1622 1833 2954 1960 2457 1154 2667 2219 1351 686 707 523 613 1109 2262 497 2842 623 823 2853 2554 2502 1854 1735 1848 2728 1619 2515 1828 210 2742 578 1386 2003 876 2813 514 142 1263 1308 892 631 2058 2638 2495 1500 884 1863 400 2438 1318 2356 2474 1750 2046 2797 1866 151 2366 2786 2400 1700 1652 2683 1459 311 1254 2866 250 1950 1478 2784 1563 1131 100 706 2748 2542 2593 478 1928 1774 665 2518 1560 1637 2483 420 683 2818 535 2177 2981 2280 1630 1263 2689 699 2823 909 1243 955 1248 2968 234 2333 1365 1023 100 1705 1940 431 1007 1200 911 2349 2810 1108 223 965 526 2785 2434 1973 136 2992 1895 823 1071 2227 1893 1325 2984 666 2430 1853 206 2479 844 465 383 1730 402 2367 1662 2771 1341 2625 2650 1447 319 602 1096 1707 635 2213 101 219 2739 666 1742 1360 739 1670 667 1400 1243 2420 2703 1493 1731 2907 1951 2384 764 416 1737 1305 508 639 434 1266 2760 1861 2965 1100 943 2663 1213 1818 2108 436 1891 2368 354 836 2121 847 2274 1988 563 640 1210 1837 880 2100 1113 1315 1440 1446 2163 1803 2013 1960 2950 470 1391 279 1809 2624 2196 1824 862 1023 2564 2077 1252 2572 2299 962 2321 2246 1379 2229 2924 
//86   18   53   31   81   32   75   33   62   83   96   84   73   61   98   85   76   38   79   89   14   94   66   93   40   10   60   13   50   16   99    9   51   64   41   37   46   70   92   59   80    7   74    2   26   25   22   19   65   90   77   34    3   21   42   68   20   72   54   69   28    8   55   11   57   56   36   24   39    1   12   23   29   67   78   95   44   17   27   82   52   88   49    6   35  100   43   45   63   58    5   71   48   30   87   97   91   15   47    4

//3000 numbers

